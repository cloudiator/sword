/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oktawave.api.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * OVS disk
 */
@ApiModel(description = "OVS disk")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-03T15:23:33.358+01:00")
public class Disk {
  @SerializedName("Id")
  private Integer id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("SpaceCapacity")
  private Integer spaceCapacity = null;

  @SerializedName("Tier")
  private DictionaryItem tier = null;

  @SerializedName("CreationDate")
  private OffsetDateTime creationDate = null;

  @SerializedName("CreationUser")
  private UserResource creationUser = null;

  @SerializedName("IsShared")
  private Boolean isShared = null;

  @SerializedName("SharedDiskType")
  private DictionaryItem sharedDiskType = null;

  @SerializedName("Subregion")
  private BaseResource subregion = null;

  @SerializedName("IsLocked")
  private Boolean isLocked = null;

  @SerializedName("LockingDate")
  private OffsetDateTime lockingDate = null;

  @SerializedName("Connections")
  private List<DiskConnection> connections = null;

  @SerializedName("IsFreemium")
  private Boolean isFreemium = null;

  public Disk id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Id
   * @return id
  **/
  @ApiModelProperty(value = "Id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Disk name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @ApiModelProperty(value = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Disk spaceCapacity(Integer spaceCapacity) {
    this.spaceCapacity = spaceCapacity;
    return this;
  }

   /**
   * Space capacity in GB
   * @return spaceCapacity
  **/
  @ApiModelProperty(value = "Space capacity in GB")
  public Integer getSpaceCapacity() {
    return spaceCapacity;
  }

  public void setSpaceCapacity(Integer spaceCapacity) {
    this.spaceCapacity = spaceCapacity;
  }

  public Disk tier(DictionaryItem tier) {
    this.tier = tier;
    return this;
  }

   /**
   * Tier
   * @return tier
  **/
  @ApiModelProperty(value = "Tier")
  public DictionaryItem getTier() {
    return tier;
  }

  public void setTier(DictionaryItem tier) {
    this.tier = tier;
  }

  public Disk creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Creation date
   * @return creationDate
  **/
  @ApiModelProperty(value = "Creation date")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public Disk creationUser(UserResource creationUser) {
    this.creationUser = creationUser;
    return this;
  }

   /**
   * User who created the disk
   * @return creationUser
  **/
  @ApiModelProperty(value = "User who created the disk")
  public UserResource getCreationUser() {
    return creationUser;
  }

  public void setCreationUser(UserResource creationUser) {
    this.creationUser = creationUser;
  }

  public Disk isShared(Boolean isShared) {
    this.isShared = isShared;
    return this;
  }

   /**
   * If disk is shared
   * @return isShared
  **/
  @ApiModelProperty(value = "If disk is shared")
  public Boolean isIsShared() {
    return isShared;
  }

  public void setIsShared(Boolean isShared) {
    this.isShared = isShared;
  }

  public Disk sharedDiskType(DictionaryItem sharedDiskType) {
    this.sharedDiskType = sharedDiskType;
    return this;
  }

   /**
   * Shared disk type, null if disk is not shared
   * @return sharedDiskType
  **/
  @ApiModelProperty(value = "Shared disk type, null if disk is not shared")
  public DictionaryItem getSharedDiskType() {
    return sharedDiskType;
  }

  public void setSharedDiskType(DictionaryItem sharedDiskType) {
    this.sharedDiskType = sharedDiskType;
  }

  public Disk subregion(BaseResource subregion) {
    this.subregion = subregion;
    return this;
  }

   /**
   * Subregion
   * @return subregion
  **/
  @ApiModelProperty(value = "Subregion")
  public BaseResource getSubregion() {
    return subregion;
  }

  public void setSubregion(BaseResource subregion) {
    this.subregion = subregion;
  }

  public Disk isLocked(Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

   /**
   * If the disk is locked by a running operation
   * @return isLocked
  **/
  @ApiModelProperty(value = "If the disk is locked by a running operation")
  public Boolean isIsLocked() {
    return isLocked;
  }

  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }

  public Disk lockingDate(OffsetDateTime lockingDate) {
    this.lockingDate = lockingDate;
    return this;
  }

   /**
   * Locking date
   * @return lockingDate
  **/
  @ApiModelProperty(value = "Locking date")
  public OffsetDateTime getLockingDate() {
    return lockingDate;
  }

  public void setLockingDate(OffsetDateTime lockingDate) {
    this.lockingDate = lockingDate;
  }

  public Disk connections(List<DiskConnection> connections) {
    this.connections = connections;
    return this;
  }

  public Disk addConnectionsItem(DiskConnection connectionsItem) {
    if (this.connections == null) {
      this.connections = new ArrayList<DiskConnection>();
    }
    this.connections.add(connectionsItem);
    return this;
  }

   /**
   * Connections to instances
   * @return connections
  **/
  @ApiModelProperty(value = "Connections to instances")
  public List<DiskConnection> getConnections() {
    return connections;
  }

  public void setConnections(List<DiskConnection> connections) {
    this.connections = connections;
  }

  public Disk isFreemium(Boolean isFreemium) {
    this.isFreemium = isFreemium;
    return this;
  }

   /**
   * Is freemium
   * @return isFreemium
  **/
  @ApiModelProperty(value = "Is freemium")
  public Boolean isIsFreemium() {
    return isFreemium;
  }

  public void setIsFreemium(Boolean isFreemium) {
    this.isFreemium = isFreemium;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Disk disk = (Disk) o;
    return Objects.equals(this.id, disk.id) &&
        Objects.equals(this.name, disk.name) &&
        Objects.equals(this.spaceCapacity, disk.spaceCapacity) &&
        Objects.equals(this.tier, disk.tier) &&
        Objects.equals(this.creationDate, disk.creationDate) &&
        Objects.equals(this.creationUser, disk.creationUser) &&
        Objects.equals(this.isShared, disk.isShared) &&
        Objects.equals(this.sharedDiskType, disk.sharedDiskType) &&
        Objects.equals(this.subregion, disk.subregion) &&
        Objects.equals(this.isLocked, disk.isLocked) &&
        Objects.equals(this.lockingDate, disk.lockingDate) &&
        Objects.equals(this.connections, disk.connections) &&
        Objects.equals(this.isFreemium, disk.isFreemium);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, spaceCapacity, tier, creationDate, creationUser, isShared, sharedDiskType, subregion, isLocked, lockingDate, connections, isFreemium);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Disk {\n");

      sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    spaceCapacity: ").append(toIndentedString(spaceCapacity)).append("\n");
    sb.append("    tier: ").append(toIndentedString(tier)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    creationUser: ").append(toIndentedString(creationUser)).append("\n");
    sb.append("    isShared: ").append(toIndentedString(isShared)).append("\n");
    sb.append("    sharedDiskType: ").append(toIndentedString(sharedDiskType)).append("\n");
    sb.append("    subregion: ").append(toIndentedString(subregion)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    lockingDate: ").append(toIndentedString(lockingDate)).append("\n");
    sb.append("    connections: ").append(toIndentedString(connections)).append("\n");
    sb.append("    isFreemium: ").append(toIndentedString(isFreemium)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

