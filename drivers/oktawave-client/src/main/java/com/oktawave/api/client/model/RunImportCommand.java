/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oktawave.api.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Run import command
 */
@ApiModel(description = "Run import command")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-25T12:05:03.973+02:00")
public class RunImportCommand {
  @SerializedName("SubregionId")
  private Integer subregionId = null;

  @SerializedName("TypeId")
  private Integer typeId = null;

  @SerializedName("Disks")
  private List<RunImportDiskCommand> disks = new ArrayList<RunImportDiskCommand>();

  @SerializedName("Network")
  private List<RunImportNetworkCommand> network = new ArrayList<RunImportNetworkCommand>();

  public RunImportCommand subregionId(Integer subregionId) {
    this.subregionId = subregionId;
    return this;
  }

   /**
   * Id of target subregion
   * @return subregionId
  **/
  @ApiModelProperty(value = "Id of target subregion")
  public Integer getSubregionId() {
    return subregionId;
  }

  public void setSubregionId(Integer subregionId) {
    this.subregionId = subregionId;
  }

  public RunImportCommand typeId(Integer typeId) {
    this.typeId = typeId;
    return this;
  }

   /**
   * Type of an instance
   * @return typeId
  **/
  @ApiModelProperty(required = true, value = "Type of an instance")
  public Integer getTypeId() {
    return typeId;
  }

  public void setTypeId(Integer typeId) {
    this.typeId = typeId;
  }

  public RunImportCommand disks(List<RunImportDiskCommand> disks) {
    this.disks = disks;
    return this;
  }

  public RunImportCommand addDisksItem(RunImportDiskCommand disksItem) {
    this.disks.add(disksItem);
    return this;
  }

   /**
   * Disks specification
   * @return disks
  **/
  @ApiModelProperty(required = true, value = "Disks specification")
  public List<RunImportDiskCommand> getDisks() {
    return disks;
  }

  public void setDisks(List<RunImportDiskCommand> disks) {
    this.disks = disks;
  }

  public RunImportCommand network(List<RunImportNetworkCommand> network) {
    this.network = network;
    return this;
  }

  public RunImportCommand addNetworkItem(RunImportNetworkCommand networkItem) {
    this.network.add(networkItem);
    return this;
  }

   /**
   * Network specification
   * @return network
  **/
  @ApiModelProperty(required = true, value = "Network specification")
  public List<RunImportNetworkCommand> getNetwork() {
    return network;
  }

  public void setNetwork(List<RunImportNetworkCommand> network) {
    this.network = network;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunImportCommand runImportCommand = (RunImportCommand) o;
    return Objects.equals(this.subregionId, runImportCommand.subregionId) &&
        Objects.equals(this.typeId, runImportCommand.typeId) &&
        Objects.equals(this.disks, runImportCommand.disks) &&
        Objects.equals(this.network, runImportCommand.network);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subregionId, typeId, disks, network);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunImportCommand {\n");
    
    sb.append("    subregionId: ").append(toIndentedString(subregionId)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    disks: ").append(toIndentedString(disks)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

