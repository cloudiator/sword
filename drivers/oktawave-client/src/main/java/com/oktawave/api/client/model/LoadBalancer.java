/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oktawave.api.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Load balancer
 */
@ApiModel(description = "Load balancer")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-03T15:23:33.358+01:00")
public class LoadBalancer {
  @SerializedName("GroupId")
  private Integer groupId = null;

  @SerializedName("GroupName")
  private String groupName = null;

  @SerializedName("IpAddress")
  private String ipAddress = null;

  @SerializedName("IpV6Address")
  private String ipV6Address = null;

  @SerializedName("ServiceType")
  private DictionaryItem serviceType = null;

  @SerializedName("PortNumber")
  private Integer portNumber = null;

    @SerializedName("TargetPortNumber")
    private Integer targetPortNumber = null;

  @SerializedName("SessionPersistenceType")
  private DictionaryItem sessionPersistenceType = null;

  @SerializedName("Algorithm")
  private DictionaryItem algorithm = null;

  @SerializedName("IpVersion")
  private DictionaryItem ipVersion = null;

  @SerializedName("HealthCheckEnabled")
  private Boolean healthCheckEnabled = null;

  @SerializedName("SslEnabled")
  private Boolean sslEnabled = null;

  @SerializedName("CommonPersistenceForHttpAndHttpsEnabled")
  private Boolean commonPersistenceForHttpAndHttpsEnabled = null;

  @SerializedName("Servers")
  private List<LoadBalancerServer> servers = null;

  public LoadBalancer groupId(Integer groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Group id
   * @return groupId
  **/
  @ApiModelProperty(value = "Group id")
  public Integer getGroupId() {
    return groupId;
  }

  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }

  public LoadBalancer groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * Group name
   * @return groupName
  **/
  @ApiModelProperty(value = "Group name")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public LoadBalancer ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * IPv4 address
   * @return ipAddress
  **/
  @ApiModelProperty(value = "IPv4 address")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public LoadBalancer ipV6Address(String ipV6Address) {
    this.ipV6Address = ipV6Address;
    return this;
  }

   /**
   * IPv6 address
   * @return ipV6Address
  **/
  @ApiModelProperty(value = "IPv6 address")
  public String getIpV6Address() {
    return ipV6Address;
  }

  public void setIpV6Address(String ipV6Address) {
    this.ipV6Address = ipV6Address;
  }

  public LoadBalancer serviceType(DictionaryItem serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Service type (HTTP, SMTP, Port...)
   * @return serviceType
  **/
  @ApiModelProperty(value = "Service type (HTTP, SMTP, Port...)")
  public DictionaryItem getServiceType() {
    return serviceType;
  }

  public void setServiceType(DictionaryItem serviceType) {
    this.serviceType = serviceType;
  }

  public LoadBalancer portNumber(Integer portNumber) {
    this.portNumber = portNumber;
    return this;
  }

   /**
   * Port number for \&quot;Port\&quot; service type
   * @return portNumber
  **/
  @ApiModelProperty(value = "Port number for \"Port\" service type")
  public Integer getPortNumber() {
    return portNumber;
  }

  public void setPortNumber(Integer portNumber) {
    this.portNumber = portNumber;
  }

    public LoadBalancer targetPortNumber(Integer targetPortNumber) {
        this.targetPortNumber = targetPortNumber;
        return this;
    }

    /**
     * Port number for \&quot;TargetPort\&quot; service type
     *
     * @return targetPortNumber
     **/
    @ApiModelProperty(value = "Port number for \"TargetPort\" service type")
    public Integer getTargetPortNumber() {
        return targetPortNumber;
    }

    public void setTargetPortNumber(Integer targetPortNumber) {
        this.targetPortNumber = targetPortNumber;
    }

  public LoadBalancer sessionPersistenceType(DictionaryItem sessionPersistenceType) {
    this.sessionPersistenceType = sessionPersistenceType;
    return this;
  }

   /**
   * Session persistence type
   * @return sessionPersistenceType
  **/
  @ApiModelProperty(value = "Session persistence type")
  public DictionaryItem getSessionPersistenceType() {
    return sessionPersistenceType;
  }

  public void setSessionPersistenceType(DictionaryItem sessionPersistenceType) {
    this.sessionPersistenceType = sessionPersistenceType;
  }

  public LoadBalancer algorithm(DictionaryItem algorithm) {
    this.algorithm = algorithm;
    return this;
  }

   /**
   * Algorithm
   * @return algorithm
  **/
  @ApiModelProperty(value = "Algorithm")
  public DictionaryItem getAlgorithm() {
    return algorithm;
  }

  public void setAlgorithm(DictionaryItem algorithm) {
    this.algorithm = algorithm;
  }

  public LoadBalancer ipVersion(DictionaryItem ipVersion) {
    this.ipVersion = ipVersion;
    return this;
  }

   /**
   * IP version
   * @return ipVersion
  **/
  @ApiModelProperty(value = "IP version")
  public DictionaryItem getIpVersion() {
    return ipVersion;
  }

  public void setIpVersion(DictionaryItem ipVersion) {
    this.ipVersion = ipVersion;
  }

  public LoadBalancer healthCheckEnabled(Boolean healthCheckEnabled) {
    this.healthCheckEnabled = healthCheckEnabled;
    return this;
  }

   /**
   * Is health check enabled
   * @return healthCheckEnabled
  **/
  @ApiModelProperty(value = "Is health check enabled")
  public Boolean isHealthCheckEnabled() {
    return healthCheckEnabled;
  }

  public void setHealthCheckEnabled(Boolean healthCheckEnabled) {
    this.healthCheckEnabled = healthCheckEnabled;
  }

  public LoadBalancer sslEnabled(Boolean sslEnabled) {
    this.sslEnabled = sslEnabled;
    return this;
  }

   /**
   * Is ssl enabled (only for \&quot;HTTP\&quot; service type)
   * @return sslEnabled
  **/
  @ApiModelProperty(value = "Is ssl enabled (only for \"HTTP\" service type)")
  public Boolean isSslEnabled() {
    return sslEnabled;
  }

  public void setSslEnabled(Boolean sslEnabled) {
    this.sslEnabled = sslEnabled;
  }

  public LoadBalancer commonPersistenceForHttpAndHttpsEnabled(Boolean commonPersistenceForHttpAndHttpsEnabled) {
    this.commonPersistenceForHttpAndHttpsEnabled = commonPersistenceForHttpAndHttpsEnabled;
    return this;
  }

   /**
   * Is common persistence for HTTP and HTTPS enabled (only for \&quot;HTTP\&quot; service type)
   * @return commonPersistenceForHttpAndHttpsEnabled
  **/
  @ApiModelProperty(value = "Is common persistence for HTTP and HTTPS enabled (only for \"HTTP\" service type)")
  public Boolean isCommonPersistenceForHttpAndHttpsEnabled() {
    return commonPersistenceForHttpAndHttpsEnabled;
  }

  public void setCommonPersistenceForHttpAndHttpsEnabled(Boolean commonPersistenceForHttpAndHttpsEnabled) {
    this.commonPersistenceForHttpAndHttpsEnabled = commonPersistenceForHttpAndHttpsEnabled;
  }

  public LoadBalancer servers(List<LoadBalancerServer> servers) {
    this.servers = servers;
    return this;
  }

  public LoadBalancer addServersItem(LoadBalancerServer serversItem) {
    if (this.servers == null) {
      this.servers = new ArrayList<LoadBalancerServer>();
    }
    this.servers.add(serversItem);
    return this;
  }

   /**
   * Services
   * @return servers
  **/
  @ApiModelProperty(value = "Services")
  public List<LoadBalancerServer> getServers() {
    return servers;
  }

  public void setServers(List<LoadBalancerServer> servers) {
    this.servers = servers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadBalancer loadBalancer = (LoadBalancer) o;
    return Objects.equals(this.groupId, loadBalancer.groupId) &&
        Objects.equals(this.groupName, loadBalancer.groupName) &&
        Objects.equals(this.ipAddress, loadBalancer.ipAddress) &&
        Objects.equals(this.ipV6Address, loadBalancer.ipV6Address) &&
        Objects.equals(this.serviceType, loadBalancer.serviceType) &&
        Objects.equals(this.portNumber, loadBalancer.portNumber) &&
            Objects.equals(this.targetPortNumber, loadBalancer.targetPortNumber) &&
        Objects.equals(this.sessionPersistenceType, loadBalancer.sessionPersistenceType) &&
        Objects.equals(this.algorithm, loadBalancer.algorithm) &&
        Objects.equals(this.ipVersion, loadBalancer.ipVersion) &&
        Objects.equals(this.healthCheckEnabled, loadBalancer.healthCheckEnabled) &&
        Objects.equals(this.sslEnabled, loadBalancer.sslEnabled) &&
        Objects.equals(this.commonPersistenceForHttpAndHttpsEnabled, loadBalancer.commonPersistenceForHttpAndHttpsEnabled) &&
        Objects.equals(this.servers, loadBalancer.servers);
  }

  @Override
  public int hashCode() {
      return Objects.hash(groupId, groupName, ipAddress, ipV6Address, serviceType, portNumber, targetPortNumber, sessionPersistenceType, algorithm, ipVersion, healthCheckEnabled, sslEnabled, commonPersistenceForHttpAndHttpsEnabled, servers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadBalancer {\n");

    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    ipV6Address: ").append(toIndentedString(ipV6Address)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    portNumber: ").append(toIndentedString(portNumber)).append("\n");
      sb.append("    targetPortNumber: ").append(toIndentedString(targetPortNumber)).append("\n");
    sb.append("    sessionPersistenceType: ").append(toIndentedString(sessionPersistenceType)).append("\n");
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    ipVersion: ").append(toIndentedString(ipVersion)).append("\n");
    sb.append("    healthCheckEnabled: ").append(toIndentedString(healthCheckEnabled)).append("\n");
    sb.append("    sslEnabled: ").append(toIndentedString(sslEnabled)).append("\n");
    sb.append("    commonPersistenceForHttpAndHttpsEnabled: ").append(toIndentedString(commonPersistenceForHttpAndHttpsEnabled)).append("\n");
    sb.append("    servers: ").append(toIndentedString(servers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

