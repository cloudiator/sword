/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oktawave.api.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.Objects;

/**
 * Search params for tickets
 */
@ApiModel(description = "Search params for tickets")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-03T15:23:33.358+01:00")
public class TicketsSearchParams {
  @SerializedName("StatusId")
  private Integer statusId = null;

  @SerializedName("CreationDateFrom")
  private OffsetDateTime creationDateFrom = null;

  @SerializedName("CreationDateTo")
  private OffsetDateTime creationDateTo = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("OrderBy")
  private String orderBy = null;

  @SerializedName("SortExpression")
  private String sortExpression = null;

  /**
   * Sort direction
   */
  @JsonAdapter(SortDirectionEnum.Adapter.class)
  public enum SortDirectionEnum {
    DESCENDING("Descending"),
    
    ASCENDING("Ascending");

    private String value;

    SortDirectionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SortDirectionEnum fromValue(String text) {
      for (SortDirectionEnum b : SortDirectionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SortDirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SortDirectionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SortDirectionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SortDirectionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("SortDirection")
  private SortDirectionEnum sortDirection = null;

  public TicketsSearchParams statusId(Integer statusId) {
    this.statusId = statusId;
    return this;
  }

   /**
   * Tickets status id
   * @return statusId
  **/
  @ApiModelProperty(value = "Tickets status id")
  public Integer getStatusId() {
    return statusId;
  }

  public void setStatusId(Integer statusId) {
    this.statusId = statusId;
  }

  public TicketsSearchParams creationDateFrom(OffsetDateTime creationDateFrom) {
    this.creationDateFrom = creationDateFrom;
    return this;
  }

   /**
   * Tickets creation date from
   * @return creationDateFrom
  **/
  @ApiModelProperty(value = "Tickets creation date from")
  public OffsetDateTime getCreationDateFrom() {
    return creationDateFrom;
  }

  public void setCreationDateFrom(OffsetDateTime creationDateFrom) {
    this.creationDateFrom = creationDateFrom;
  }

  public TicketsSearchParams creationDateTo(OffsetDateTime creationDateTo) {
    this.creationDateTo = creationDateTo;
    return this;
  }

   /**
   * Tickets creation date to
   * @return creationDateTo
  **/
  @ApiModelProperty(value = "Tickets creation date to")
  public OffsetDateTime getCreationDateTo() {
    return creationDateTo;
  }

  public void setCreationDateTo(OffsetDateTime creationDateTo) {
    this.creationDateTo = creationDateTo;
  }

  public TicketsSearchParams pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Page size
   * @return pageSize
  **/
  @ApiModelProperty(value = "Page size")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public TicketsSearchParams pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Page number
   * @return pageNumber
  **/
  @ApiModelProperty(value = "Page number")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public TicketsSearchParams orderBy(String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

   /**
   * Order by
   * @return orderBy
  **/
  @ApiModelProperty(value = "Order by")
  public String getOrderBy() {
    return orderBy;
  }

  public void setOrderBy(String orderBy) {
    this.orderBy = orderBy;
  }

   /**
   * Sort expression
   * @return sortExpression
  **/
  @ApiModelProperty(value = "Sort expression")
  public String getSortExpression() {
    return sortExpression;
  }

   /**
   * Sort direction
   * @return sortDirection
  **/
  @ApiModelProperty(value = "Sort direction")
  public SortDirectionEnum getSortDirection() {
    return sortDirection;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TicketsSearchParams ticketsSearchParams = (TicketsSearchParams) o;
    return Objects.equals(this.statusId, ticketsSearchParams.statusId) &&
        Objects.equals(this.creationDateFrom, ticketsSearchParams.creationDateFrom) &&
        Objects.equals(this.creationDateTo, ticketsSearchParams.creationDateTo) &&
        Objects.equals(this.pageSize, ticketsSearchParams.pageSize) &&
        Objects.equals(this.pageNumber, ticketsSearchParams.pageNumber) &&
        Objects.equals(this.orderBy, ticketsSearchParams.orderBy) &&
        Objects.equals(this.sortExpression, ticketsSearchParams.sortExpression) &&
        Objects.equals(this.sortDirection, ticketsSearchParams.sortDirection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statusId, creationDateFrom, creationDateTo, pageSize, pageNumber, orderBy, sortExpression, sortDirection);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TicketsSearchParams {\n");

      sb.append("    statusId: ").append(toIndentedString(statusId)).append("\n");
    sb.append("    creationDateFrom: ").append(toIndentedString(creationDateFrom)).append("\n");
    sb.append("    creationDateTo: ").append(toIndentedString(creationDateTo)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    sortExpression: ").append(toIndentedString(sortExpression)).append("\n");
    sb.append("    sortDirection: ").append(toIndentedString(sortDirection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

