/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oktawave.api.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Template
 */
@ApiModel(description = "Template")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-25T12:05:03.973+02:00")
public class Template {
  @SerializedName("Id")
  private Integer id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Version")
  private String version = null;

  @SerializedName("CreationDate")
  private OffsetDateTime creationDate = null;

  @SerializedName("LastChangeDate")
  private OffsetDateTime lastChangeDate = null;

  @SerializedName("CreationUser")
  private UserResource creationUser = null;

  @SerializedName("DefaultInstanceType")
  private DictionaryItem defaultInstanceType = null;

  @SerializedName("MinimumInstanceType")
  private DictionaryItem minimumInstanceType = null;

  @SerializedName("EthernetControllersNumber")
  private Integer ethernetControllersNumber = null;

  @SerializedName("EthernetControllersType")
  private DictionaryItem ethernetControllersType = null;

  @SerializedName("SystemCategory")
  private DictionaryItem systemCategory = null;

  @SerializedName("OwnerAccount")
  private BaseResource ownerAccount = null;

  @SerializedName("PublicationStatus")
  private DictionaryItem publicationStatus = null;

  @SerializedName("Disks")
  private List<TemplateDisk> disks = null;

  @SerializedName("Software")
  private List<Software> software = null;

  @SerializedName("TemplateType")
  private DictionaryItem templateType = null;

  public Template id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Id
   * @return id
  **/
  @ApiModelProperty(value = "Id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Template name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @ApiModelProperty(value = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Template description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @ApiModelProperty(value = "Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Template version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version
   * @return version
  **/
  @ApiModelProperty(value = "Version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public Template creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Creation date
   * @return creationDate
  **/
  @ApiModelProperty(value = "Creation date")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public Template lastChangeDate(OffsetDateTime lastChangeDate) {
    this.lastChangeDate = lastChangeDate;
    return this;
  }

   /**
   * Last change date
   * @return lastChangeDate
  **/
  @ApiModelProperty(value = "Last change date")
  public OffsetDateTime getLastChangeDate() {
    return lastChangeDate;
  }

  public void setLastChangeDate(OffsetDateTime lastChangeDate) {
    this.lastChangeDate = lastChangeDate;
  }

  public Template creationUser(UserResource creationUser) {
    this.creationUser = creationUser;
    return this;
  }

   /**
   * User who created the template
   * @return creationUser
  **/
  @ApiModelProperty(value = "User who created the template")
  public UserResource getCreationUser() {
    return creationUser;
  }

  public void setCreationUser(UserResource creationUser) {
    this.creationUser = creationUser;
  }

  public Template defaultInstanceType(DictionaryItem defaultInstanceType) {
    this.defaultInstanceType = defaultInstanceType;
    return this;
  }

   /**
   * Default instance type
   * @return defaultInstanceType
  **/
  @ApiModelProperty(value = "Default instance type")
  public DictionaryItem getDefaultInstanceType() {
    return defaultInstanceType;
  }

  public void setDefaultInstanceType(DictionaryItem defaultInstanceType) {
    this.defaultInstanceType = defaultInstanceType;
  }

  public Template minimumInstanceType(DictionaryItem minimumInstanceType) {
    this.minimumInstanceType = minimumInstanceType;
    return this;
  }

   /**
   * Minimum instance type
   * @return minimumInstanceType
  **/
  @ApiModelProperty(value = "Minimum instance type")
  public DictionaryItem getMinimumInstanceType() {
    return minimumInstanceType;
  }

  public void setMinimumInstanceType(DictionaryItem minimumInstanceType) {
    this.minimumInstanceType = minimumInstanceType;
  }

  public Template ethernetControllersNumber(Integer ethernetControllersNumber) {
    this.ethernetControllersNumber = ethernetControllersNumber;
    return this;
  }

   /**
   * Ethernet controllers number
   * @return ethernetControllersNumber
  **/
  @ApiModelProperty(value = "Ethernet controllers number")
  public Integer getEthernetControllersNumber() {
    return ethernetControllersNumber;
  }

  public void setEthernetControllersNumber(Integer ethernetControllersNumber) {
    this.ethernetControllersNumber = ethernetControllersNumber;
  }

  public Template ethernetControllersType(DictionaryItem ethernetControllersType) {
    this.ethernetControllersType = ethernetControllersType;
    return this;
  }

   /**
   * Ethernet controllers type
   * @return ethernetControllersType
  **/
  @ApiModelProperty(value = "Ethernet controllers type")
  public DictionaryItem getEthernetControllersType() {
    return ethernetControllersType;
  }

  public void setEthernetControllersType(DictionaryItem ethernetControllersType) {
    this.ethernetControllersType = ethernetControllersType;
  }

  public Template systemCategory(DictionaryItem systemCategory) {
    this.systemCategory = systemCategory;
    return this;
  }

   /**
   * System category
   * @return systemCategory
  **/
  @ApiModelProperty(value = "System category")
  public DictionaryItem getSystemCategory() {
    return systemCategory;
  }

  public void setSystemCategory(DictionaryItem systemCategory) {
    this.systemCategory = systemCategory;
  }

  public Template ownerAccount(BaseResource ownerAccount) {
    this.ownerAccount = ownerAccount;
    return this;
  }

   /**
   * Owner account
   * @return ownerAccount
  **/
  @ApiModelProperty(value = "Owner account")
  public BaseResource getOwnerAccount() {
    return ownerAccount;
  }

  public void setOwnerAccount(BaseResource ownerAccount) {
    this.ownerAccount = ownerAccount;
  }

  public Template publicationStatus(DictionaryItem publicationStatus) {
    this.publicationStatus = publicationStatus;
    return this;
  }

   /**
   * Publication status
   * @return publicationStatus
  **/
  @ApiModelProperty(value = "Publication status")
  public DictionaryItem getPublicationStatus() {
    return publicationStatus;
  }

  public void setPublicationStatus(DictionaryItem publicationStatus) {
    this.publicationStatus = publicationStatus;
  }

  public Template disks(List<TemplateDisk> disks) {
    this.disks = disks;
    return this;
  }

  public Template addDisksItem(TemplateDisk disksItem) {
    if (this.disks == null) {
      this.disks = new ArrayList<TemplateDisk>();
    }
    this.disks.add(disksItem);
    return this;
  }

   /**
   * Disks
   * @return disks
  **/
  @ApiModelProperty(value = "Disks")
  public List<TemplateDisk> getDisks() {
    return disks;
  }

  public void setDisks(List<TemplateDisk> disks) {
    this.disks = disks;
  }

  public Template software(List<Software> software) {
    this.software = software;
    return this;
  }

  public Template addSoftwareItem(Software softwareItem) {
    if (this.software == null) {
      this.software = new ArrayList<Software>();
    }
    this.software.add(softwareItem);
    return this;
  }

   /**
   * Softwares
   * @return software
  **/
  @ApiModelProperty(value = "Softwares")
  public List<Software> getSoftware() {
    return software;
  }

  public void setSoftware(List<Software> software) {
    this.software = software;
  }

  public Template templateType(DictionaryItem templateType) {
    this.templateType = templateType;
    return this;
  }

   /**
   * Template type
   * @return templateType
  **/
  @ApiModelProperty(value = "Template type")
  public DictionaryItem getTemplateType() {
    return templateType;
  }

  public void setTemplateType(DictionaryItem templateType) {
    this.templateType = templateType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Template template = (Template) o;
    return Objects.equals(this.id, template.id) &&
        Objects.equals(this.name, template.name) &&
        Objects.equals(this.description, template.description) &&
        Objects.equals(this.version, template.version) &&
        Objects.equals(this.creationDate, template.creationDate) &&
        Objects.equals(this.lastChangeDate, template.lastChangeDate) &&
        Objects.equals(this.creationUser, template.creationUser) &&
        Objects.equals(this.defaultInstanceType, template.defaultInstanceType) &&
        Objects.equals(this.minimumInstanceType, template.minimumInstanceType) &&
        Objects.equals(this.ethernetControllersNumber, template.ethernetControllersNumber) &&
        Objects.equals(this.ethernetControllersType, template.ethernetControllersType) &&
        Objects.equals(this.systemCategory, template.systemCategory) &&
        Objects.equals(this.ownerAccount, template.ownerAccount) &&
        Objects.equals(this.publicationStatus, template.publicationStatus) &&
        Objects.equals(this.disks, template.disks) &&
        Objects.equals(this.software, template.software) &&
        Objects.equals(this.templateType, template.templateType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, version, creationDate, lastChangeDate, creationUser, defaultInstanceType, minimumInstanceType, ethernetControllersNumber, ethernetControllersType, systemCategory, ownerAccount, publicationStatus, disks, software, templateType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Template {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    lastChangeDate: ").append(toIndentedString(lastChangeDate)).append("\n");
    sb.append("    creationUser: ").append(toIndentedString(creationUser)).append("\n");
    sb.append("    defaultInstanceType: ").append(toIndentedString(defaultInstanceType)).append("\n");
    sb.append("    minimumInstanceType: ").append(toIndentedString(minimumInstanceType)).append("\n");
    sb.append("    ethernetControllersNumber: ").append(toIndentedString(ethernetControllersNumber)).append("\n");
    sb.append("    ethernetControllersType: ").append(toIndentedString(ethernetControllersType)).append("\n");
    sb.append("    systemCategory: ").append(toIndentedString(systemCategory)).append("\n");
    sb.append("    ownerAccount: ").append(toIndentedString(ownerAccount)).append("\n");
    sb.append("    publicationStatus: ").append(toIndentedString(publicationStatus)).append("\n");
    sb.append("    disks: ").append(toIndentedString(disks)).append("\n");
    sb.append("    software: ").append(toIndentedString(software)).append("\n");
    sb.append("    templateType: ").append(toIndentedString(templateType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

