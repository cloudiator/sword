/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oktawave.api.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Create/update dns health check command
 */
@ApiModel(description = "Create/update dns health check command")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-03T15:23:33.358+01:00")
public class CreateUpdateHealthCheckDnsCommand {
  @SerializedName("Timeout")
  private Integer timeout = 10000;

  @SerializedName("RecordTypeId")
  private Integer recordTypeId = 1605;

  @SerializedName("QueryDomain")
  private String queryDomain = "";

  @SerializedName("ExpectedResponseValue")
  private String expectedResponseValue = "";

  @SerializedName("Recurse")
  private Boolean recurse = false;

  @SerializedName("ErrorTolerance")
  private Integer errorTolerance = 51;

  @SerializedName("Name")
  private String name = "";

  @SerializedName("Address")
  private String address = "";

  @SerializedName("Interval")
  private Integer interval = 60;

  @SerializedName("Paused")
  private Boolean paused = false;

  @SerializedName("LocationsFailoverEnabled")
  private Boolean locationsFailoverEnabled = true;

  @SerializedName("NotificationTypeIds")
  private List<Integer> notificationTypeIds = null;

  @SerializedName("NotificationEventTypeIds")
  private List<Integer> notificationEventTypeIds = null;

  @SerializedName("NotificationTimeId")
  private Integer notificationTimeId = 1594;

    @SerializedName("Description")
    private String description = null;

  public CreateUpdateHealthCheckDnsCommand timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Time the server has to complete the request in [ms]
   * minimum: 10
   * maximum: 120000
   * @return timeout
  **/
  @ApiModelProperty(value = "Time the server has to complete the request in [ms]")
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }

  public CreateUpdateHealthCheckDnsCommand recordTypeId(Integer recordTypeId) {
    this.recordTypeId = recordTypeId;
    return this;
  }

   /**
   * Record type (Dictionary 186)
   * @return recordTypeId
  **/
  @ApiModelProperty(required = true, value = "Record type (Dictionary 186)")
  public Integer getRecordTypeId() {
    return recordTypeId;
  }

  public void setRecordTypeId(Integer recordTypeId) {
    this.recordTypeId = recordTypeId;
  }

  public CreateUpdateHealthCheckDnsCommand queryDomain(String queryDomain) {
    this.queryDomain = queryDomain;
    return this;
  }

   /**
   * Query domain
   * @return queryDomain
  **/
  @ApiModelProperty(required = true, value = "Query domain")
  public String getQueryDomain() {
    return queryDomain;
  }

  public void setQueryDomain(String queryDomain) {
    this.queryDomain = queryDomain;
  }

  public CreateUpdateHealthCheckDnsCommand expectedResponseValue(String expectedResponseValue) {
    this.expectedResponseValue = expectedResponseValue;
    return this;
  }

   /**
   * Expected DNS record value
   * @return expectedResponseValue
  **/
  @ApiModelProperty(value = "Expected DNS record value")
  public String getExpectedResponseValue() {
    return expectedResponseValue;
  }

  public void setExpectedResponseValue(String expectedResponseValue) {
    this.expectedResponseValue = expectedResponseValue;
  }

  public CreateUpdateHealthCheckDnsCommand recurse(Boolean recurse) {
    this.recurse = recurse;
    return this;
  }

   /**
   * Recursive query
   * @return recurse
  **/
  @ApiModelProperty(required = true, value = "Recursive query")
  public Boolean isRecurse() {
    return recurse;
  }

  public void setRecurse(Boolean recurse) {
    this.recurse = recurse;
  }

  public CreateUpdateHealthCheckDnsCommand errorTolerance(Integer errorTolerance) {
    this.errorTolerance = errorTolerance;
    return this;
  }

   /**
   * How many (%) locations have to report an error to consider it a breakdown
   * minimum: 1
   * maximum: 100
   * @return errorTolerance
  **/
  @ApiModelProperty(required = true, value = "How many (%) locations have to report an error to consider it a breakdown")
  public Integer getErrorTolerance() {
    return errorTolerance;
  }

  public void setErrorTolerance(Integer errorTolerance) {
    this.errorTolerance = errorTolerance;
  }

  public CreateUpdateHealthCheckDnsCommand name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Health check name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Health check name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateUpdateHealthCheckDnsCommand address(String address) {
    this.address = address;
    return this;
  }

   /**
   * URL or IP address of the monitored service
   * @return address
  **/
  @ApiModelProperty(required = true, value = "URL or IP address of the monitored service")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public CreateUpdateHealthCheckDnsCommand interval(Integer interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Time interval between health checks, in seconds
   * @return interval
  **/
  @ApiModelProperty(required = true, value = "Time interval between health checks, in seconds")
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(Integer interval) {
    this.interval = interval;
  }

  public CreateUpdateHealthCheckDnsCommand paused(Boolean paused) {
    this.paused = paused;
    return this;
  }

   /**
   * Is paused
   * @return paused
  **/
  @ApiModelProperty(required = true, value = "Is paused")
  public Boolean isPaused() {
    return paused;
  }

  public void setPaused(Boolean paused) {
    this.paused = paused;
  }

  public CreateUpdateHealthCheckDnsCommand locationsFailoverEnabled(Boolean locationsFailoverEnabled) {
    this.locationsFailoverEnabled = locationsFailoverEnabled;
    return this;
  }

   /**
   * Use random substitute locations in case of location breakdown
   * @return locationsFailoverEnabled
  **/
  @ApiModelProperty(required = true, value = "Use random substitute locations in case of location breakdown")
  public Boolean isLocationsFailoverEnabled() {
    return locationsFailoverEnabled;
  }

  public void setLocationsFailoverEnabled(Boolean locationsFailoverEnabled) {
    this.locationsFailoverEnabled = locationsFailoverEnabled;
  }

  public CreateUpdateHealthCheckDnsCommand notificationTypeIds(List<Integer> notificationTypeIds) {
    this.notificationTypeIds = notificationTypeIds;
    return this;
  }

  public CreateUpdateHealthCheckDnsCommand addNotificationTypeIdsItem(Integer notificationTypeIdsItem) {
    if (this.notificationTypeIds == null) {
      this.notificationTypeIds = new ArrayList<Integer>();
    }
    this.notificationTypeIds.add(notificationTypeIdsItem);
    return this;
  }

   /**
   * Notification types enabled for a health check
   * @return notificationTypeIds
  **/
  @ApiModelProperty(value = "Notification types enabled for a health check")
  public List<Integer> getNotificationTypeIds() {
    return notificationTypeIds;
  }

  public void setNotificationTypeIds(List<Integer> notificationTypeIds) {
    this.notificationTypeIds = notificationTypeIds;
  }

  public CreateUpdateHealthCheckDnsCommand notificationEventTypeIds(List<Integer> notificationEventTypeIds) {
    this.notificationEventTypeIds = notificationEventTypeIds;
    return this;
  }

  public CreateUpdateHealthCheckDnsCommand addNotificationEventTypeIdsItem(Integer notificationEventTypeIdsItem) {
    if (this.notificationEventTypeIds == null) {
      this.notificationEventTypeIds = new ArrayList<Integer>();
    }
    this.notificationEventTypeIds.add(notificationEventTypeIdsItem);
    return this;
  }

   /**
   * Event types with enabled notification
   * @return notificationEventTypeIds
  **/
  @ApiModelProperty(value = "Event types with enabled notification")
  public List<Integer> getNotificationEventTypeIds() {
    return notificationEventTypeIds;
  }

  public void setNotificationEventTypeIds(List<Integer> notificationEventTypeIds) {
    this.notificationEventTypeIds = notificationEventTypeIds;
  }

  public CreateUpdateHealthCheckDnsCommand notificationTimeId(Integer notificationTimeId) {
    this.notificationTimeId = notificationTimeId;
    return this;
  }

   /**
   * Time when notification is sent
   * @return notificationTimeId
  **/
  @ApiModelProperty(required = true, value = "Time when notification is sent")
  public Integer getNotificationTimeId() {
    return notificationTimeId;
  }

  public void setNotificationTimeId(Integer notificationTimeId) {
    this.notificationTimeId = notificationTimeId;
  }

    public CreateUpdateHealthCheckDnsCommand description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Description
     *
     * @return description
     **/
    @ApiModelProperty(value = "Description")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateUpdateHealthCheckDnsCommand createUpdateHealthCheckDnsCommand = (CreateUpdateHealthCheckDnsCommand) o;
    return Objects.equals(this.timeout, createUpdateHealthCheckDnsCommand.timeout) &&
        Objects.equals(this.recordTypeId, createUpdateHealthCheckDnsCommand.recordTypeId) &&
        Objects.equals(this.queryDomain, createUpdateHealthCheckDnsCommand.queryDomain) &&
        Objects.equals(this.expectedResponseValue, createUpdateHealthCheckDnsCommand.expectedResponseValue) &&
        Objects.equals(this.recurse, createUpdateHealthCheckDnsCommand.recurse) &&
        Objects.equals(this.errorTolerance, createUpdateHealthCheckDnsCommand.errorTolerance) &&
        Objects.equals(this.name, createUpdateHealthCheckDnsCommand.name) &&
        Objects.equals(this.address, createUpdateHealthCheckDnsCommand.address) &&
        Objects.equals(this.interval, createUpdateHealthCheckDnsCommand.interval) &&
        Objects.equals(this.paused, createUpdateHealthCheckDnsCommand.paused) &&
        Objects.equals(this.locationsFailoverEnabled, createUpdateHealthCheckDnsCommand.locationsFailoverEnabled) &&
        Objects.equals(this.notificationTypeIds, createUpdateHealthCheckDnsCommand.notificationTypeIds) &&
        Objects.equals(this.notificationEventTypeIds, createUpdateHealthCheckDnsCommand.notificationEventTypeIds) &&
            Objects.equals(this.notificationTimeId, createUpdateHealthCheckDnsCommand.notificationTimeId) &&
            Objects.equals(this.description, createUpdateHealthCheckDnsCommand.description);
  }

  @Override
  public int hashCode() {
      return Objects.hash(timeout, recordTypeId, queryDomain, expectedResponseValue, recurse, errorTolerance, name, address, interval, paused, locationsFailoverEnabled, notificationTypeIds, notificationEventTypeIds, notificationTimeId, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateUpdateHealthCheckDnsCommand {\n");
    
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    recordTypeId: ").append(toIndentedString(recordTypeId)).append("\n");
    sb.append("    queryDomain: ").append(toIndentedString(queryDomain)).append("\n");
    sb.append("    expectedResponseValue: ").append(toIndentedString(expectedResponseValue)).append("\n");
    sb.append("    recurse: ").append(toIndentedString(recurse)).append("\n");
    sb.append("    errorTolerance: ").append(toIndentedString(errorTolerance)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    locationsFailoverEnabled: ").append(toIndentedString(locationsFailoverEnabled)).append("\n");
    sb.append("    notificationTypeIds: ").append(toIndentedString(notificationTypeIds)).append("\n");
    sb.append("    notificationEventTypeIds: ").append(toIndentedString(notificationEventTypeIds)).append("\n");
    sb.append("    notificationTimeId: ").append(toIndentedString(notificationTimeId)).append("\n");
      sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

