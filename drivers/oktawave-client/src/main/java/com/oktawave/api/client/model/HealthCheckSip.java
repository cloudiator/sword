/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oktawave.api.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Sip health check
 */
@ApiModel(description = "Sip health check")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-03T15:23:33.358+01:00")
public class HealthCheckSip {
  @SerializedName("SipUserName")
  private String sipUserName = null;

  @SerializedName("SipPassword")
  private String sipPassword = null;

  @SerializedName("SipDomain")
  private String sipDomain = null;

  @SerializedName("Timeout")
  private Integer timeout = null;

  @SerializedName("NotificationTypes")
  private List<DictionaryItem> notificationTypes = null;

  @SerializedName("NotificationEventTypes")
  private List<DictionaryItem> notificationEventTypes = null;

  @SerializedName("NotificationTime")
  private DictionaryItem notificationTime = null;

  @SerializedName("LocationsFailoverEnabled")
  private Boolean locationsFailoverEnabled = null;

  @SerializedName("Id")
  private Integer id = null;

  @SerializedName("Interval")
  private Integer interval = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Address")
  private String address = null;

  @SerializedName("ServiceType")
  private DictionaryItem serviceType = null;

  @SerializedName("State")
  private DictionaryItem state = null;

  @SerializedName("DetailsLocation")
  private String detailsLocation = null;

  @SerializedName("Paused")
  private Boolean paused = null;

  @SerializedName("Suspended")
  private Boolean suspended = null;

  @SerializedName("LastInvalidCheck")
  private OffsetDateTime lastInvalidCheck = null;

  @SerializedName("LastValidCheck")
  private OffsetDateTime lastValidCheck = null;

    @SerializedName("Description")
    private String description = null;

  public HealthCheckSip sipUserName(String sipUserName) {
    this.sipUserName = sipUserName;
    return this;
  }

   /**
   * Sip user name
   * @return sipUserName
  **/
  @ApiModelProperty(value = "Sip user name")
  public String getSipUserName() {
    return sipUserName;
  }

  public void setSipUserName(String sipUserName) {
    this.sipUserName = sipUserName;
  }

  public HealthCheckSip sipPassword(String sipPassword) {
    this.sipPassword = sipPassword;
    return this;
  }

   /**
   * Sip password
   * @return sipPassword
  **/
  @ApiModelProperty(value = "Sip password")
  public String getSipPassword() {
    return sipPassword;
  }

  public void setSipPassword(String sipPassword) {
    this.sipPassword = sipPassword;
  }

  public HealthCheckSip sipDomain(String sipDomain) {
    this.sipDomain = sipDomain;
    return this;
  }

   /**
   * Sip domain
   * @return sipDomain
  **/
  @ApiModelProperty(value = "Sip domain")
  public String getSipDomain() {
    return sipDomain;
  }

  public void setSipDomain(String sipDomain) {
    this.sipDomain = sipDomain;
  }

  public HealthCheckSip timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Timeout
   * @return timeout
  **/
  @ApiModelProperty(value = "Timeout")
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }

  public HealthCheckSip notificationTypes(List<DictionaryItem> notificationTypes) {
    this.notificationTypes = notificationTypes;
    return this;
  }

  public HealthCheckSip addNotificationTypesItem(DictionaryItem notificationTypesItem) {
    if (this.notificationTypes == null) {
      this.notificationTypes = new ArrayList<DictionaryItem>();
    }
    this.notificationTypes.add(notificationTypesItem);
    return this;
  }

   /**
   * Notification types enabled for a health check
   * @return notificationTypes
  **/
  @ApiModelProperty(value = "Notification types enabled for a health check")
  public List<DictionaryItem> getNotificationTypes() {
    return notificationTypes;
  }

  public void setNotificationTypes(List<DictionaryItem> notificationTypes) {
    this.notificationTypes = notificationTypes;
  }

  public HealthCheckSip notificationEventTypes(List<DictionaryItem> notificationEventTypes) {
    this.notificationEventTypes = notificationEventTypes;
    return this;
  }

  public HealthCheckSip addNotificationEventTypesItem(DictionaryItem notificationEventTypesItem) {
    if (this.notificationEventTypes == null) {
      this.notificationEventTypes = new ArrayList<DictionaryItem>();
    }
    this.notificationEventTypes.add(notificationEventTypesItem);
    return this;
  }

   /**
   * Event types with enabled notification
   * @return notificationEventTypes
  **/
  @ApiModelProperty(value = "Event types with enabled notification")
  public List<DictionaryItem> getNotificationEventTypes() {
    return notificationEventTypes;
  }

  public void setNotificationEventTypes(List<DictionaryItem> notificationEventTypes) {
    this.notificationEventTypes = notificationEventTypes;
  }

  public HealthCheckSip notificationTime(DictionaryItem notificationTime) {
    this.notificationTime = notificationTime;
    return this;
  }

   /**
   * Time when notification is sent
   * @return notificationTime
  **/
  @ApiModelProperty(value = "Time when notification is sent")
  public DictionaryItem getNotificationTime() {
    return notificationTime;
  }

  public void setNotificationTime(DictionaryItem notificationTime) {
    this.notificationTime = notificationTime;
  }

  public HealthCheckSip locationsFailoverEnabled(Boolean locationsFailoverEnabled) {
    this.locationsFailoverEnabled = locationsFailoverEnabled;
    return this;
  }

   /**
   * Use random substitute locations in case of location breakdown
   * @return locationsFailoverEnabled
  **/
  @ApiModelProperty(value = "Use random substitute locations in case of location breakdown")
  public Boolean isLocationsFailoverEnabled() {
    return locationsFailoverEnabled;
  }

  public void setLocationsFailoverEnabled(Boolean locationsFailoverEnabled) {
    this.locationsFailoverEnabled = locationsFailoverEnabled;
  }

  public HealthCheckSip id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Id
   * @return id
  **/
  @ApiModelProperty(value = "Id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public HealthCheckSip interval(Integer interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Interval
   * @return interval
  **/
  @ApiModelProperty(value = "Interval")
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(Integer interval) {
    this.interval = interval;
  }

  public HealthCheckSip name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @ApiModelProperty(value = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public HealthCheckSip address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Address
   * @return address
  **/
  @ApiModelProperty(value = "Address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public HealthCheckSip serviceType(DictionaryItem serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Type
   * @return serviceType
  **/
  @ApiModelProperty(value = "Type")
  public DictionaryItem getServiceType() {
    return serviceType;
  }

  public void setServiceType(DictionaryItem serviceType) {
    this.serviceType = serviceType;
  }

  public HealthCheckSip state(DictionaryItem state) {
    this.state = state;
    return this;
  }

   /**
   * State
   * @return state
  **/
  @ApiModelProperty(value = "State")
  public DictionaryItem getState() {
    return state;
  }

  public void setState(DictionaryItem state) {
    this.state = state;
  }

  public HealthCheckSip detailsLocation(String detailsLocation) {
    this.detailsLocation = detailsLocation;
    return this;
  }

   /**
   * Details url
   * @return detailsLocation
  **/
  @ApiModelProperty(value = "Details url")
  public String getDetailsLocation() {
    return detailsLocation;
  }

  public void setDetailsLocation(String detailsLocation) {
    this.detailsLocation = detailsLocation;
  }

  public HealthCheckSip paused(Boolean paused) {
    this.paused = paused;
    return this;
  }

   /**
   * Is paused
   * @return paused
  **/
  @ApiModelProperty(value = "Is paused")
  public Boolean isPaused() {
    return paused;
  }

  public void setPaused(Boolean paused) {
    this.paused = paused;
  }

  public HealthCheckSip suspended(Boolean suspended) {
    this.suspended = suspended;
    return this;
  }

   /**
   * Is suspended
   * @return suspended
  **/
  @ApiModelProperty(value = "Is suspended")
  public Boolean isSuspended() {
    return suspended;
  }

  public void setSuspended(Boolean suspended) {
    this.suspended = suspended;
  }

  public HealthCheckSip lastInvalidCheck(OffsetDateTime lastInvalidCheck) {
    this.lastInvalidCheck = lastInvalidCheck;
    return this;
  }

   /**
   * Last invalid check
   * @return lastInvalidCheck
  **/
  @ApiModelProperty(value = "Last invalid check")
  public OffsetDateTime getLastInvalidCheck() {
    return lastInvalidCheck;
  }

  public void setLastInvalidCheck(OffsetDateTime lastInvalidCheck) {
    this.lastInvalidCheck = lastInvalidCheck;
  }

  public HealthCheckSip lastValidCheck(OffsetDateTime lastValidCheck) {
    this.lastValidCheck = lastValidCheck;
    return this;
  }

   /**
   * Last valid check
   * @return lastValidCheck
  **/
  @ApiModelProperty(value = "Last valid check")
  public OffsetDateTime getLastValidCheck() {
    return lastValidCheck;
  }

  public void setLastValidCheck(OffsetDateTime lastValidCheck) {
    this.lastValidCheck = lastValidCheck;
  }

    public HealthCheckSip description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Description
     *
     * @return description
     **/
    @ApiModelProperty(value = "Description")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthCheckSip healthCheckSip = (HealthCheckSip) o;
    return Objects.equals(this.sipUserName, healthCheckSip.sipUserName) &&
        Objects.equals(this.sipPassword, healthCheckSip.sipPassword) &&
        Objects.equals(this.sipDomain, healthCheckSip.sipDomain) &&
        Objects.equals(this.timeout, healthCheckSip.timeout) &&
        Objects.equals(this.notificationTypes, healthCheckSip.notificationTypes) &&
        Objects.equals(this.notificationEventTypes, healthCheckSip.notificationEventTypes) &&
        Objects.equals(this.notificationTime, healthCheckSip.notificationTime) &&
        Objects.equals(this.locationsFailoverEnabled, healthCheckSip.locationsFailoverEnabled) &&
        Objects.equals(this.id, healthCheckSip.id) &&
        Objects.equals(this.interval, healthCheckSip.interval) &&
        Objects.equals(this.name, healthCheckSip.name) &&
        Objects.equals(this.address, healthCheckSip.address) &&
        Objects.equals(this.serviceType, healthCheckSip.serviceType) &&
        Objects.equals(this.state, healthCheckSip.state) &&
        Objects.equals(this.detailsLocation, healthCheckSip.detailsLocation) &&
        Objects.equals(this.paused, healthCheckSip.paused) &&
        Objects.equals(this.suspended, healthCheckSip.suspended) &&
        Objects.equals(this.lastInvalidCheck, healthCheckSip.lastInvalidCheck) &&
            Objects.equals(this.lastValidCheck, healthCheckSip.lastValidCheck) &&
            Objects.equals(this.description, healthCheckSip.description);
  }

  @Override
  public int hashCode() {
      return Objects.hash(sipUserName, sipPassword, sipDomain, timeout, notificationTypes, notificationEventTypes, notificationTime, locationsFailoverEnabled, id, interval, name, address, serviceType, state, detailsLocation, paused, suspended, lastInvalidCheck, lastValidCheck, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthCheckSip {\n");

    sb.append("    sipUserName: ").append(toIndentedString(sipUserName)).append("\n");
    sb.append("    sipPassword: ").append(toIndentedString(sipPassword)).append("\n");
    sb.append("    sipDomain: ").append(toIndentedString(sipDomain)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    notificationTypes: ").append(toIndentedString(notificationTypes)).append("\n");
    sb.append("    notificationEventTypes: ").append(toIndentedString(notificationEventTypes)).append("\n");
    sb.append("    notificationTime: ").append(toIndentedString(notificationTime)).append("\n");
    sb.append("    locationsFailoverEnabled: ").append(toIndentedString(locationsFailoverEnabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    detailsLocation: ").append(toIndentedString(detailsLocation)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    suspended: ").append(toIndentedString(suspended)).append("\n");
    sb.append("    lastInvalidCheck: ").append(toIndentedString(lastInvalidCheck)).append("\n");
    sb.append("    lastValidCheck: ").append(toIndentedString(lastValidCheck)).append("\n");
      sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

