/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oktawave.api.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Change container service state command
 */
@ApiModel(description = "Change container service state command")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-25T12:05:03.973+02:00")
public class ChangeContainerServiceStateCommand {
  @SerializedName("IpAddress")
  private String ipAddress = null;

  @SerializedName("Port")
  private Integer port = null;

  @SerializedName("Enabled")
  private Boolean enabled = null;

  @SerializedName("Graceful")
  private Boolean graceful = null;

  public ChangeContainerServiceStateCommand ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Service ip address
   * @return ipAddress
  **/
  @ApiModelProperty(required = true, value = "Service ip address")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public ChangeContainerServiceStateCommand port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Service port
   * @return port
  **/
  @ApiModelProperty(required = true, value = "Service port")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public ChangeContainerServiceStateCommand enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Target state
   * @return enabled
  **/
  @ApiModelProperty(required = true, value = "Target state")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public ChangeContainerServiceStateCommand graceful(Boolean graceful) {
    this.graceful = graceful;
    return this;
  }

   /**
   * If true - waits for closing all open connections on specific service before disabling
   * @return graceful
  **/
  @ApiModelProperty(value = "If true - waits for closing all open connections on specific service before disabling")
  public Boolean isGraceful() {
    return graceful;
  }

  public void setGraceful(Boolean graceful) {
    this.graceful = graceful;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeContainerServiceStateCommand changeContainerServiceStateCommand = (ChangeContainerServiceStateCommand) o;
    return Objects.equals(this.ipAddress, changeContainerServiceStateCommand.ipAddress) &&
        Objects.equals(this.port, changeContainerServiceStateCommand.port) &&
        Objects.equals(this.enabled, changeContainerServiceStateCommand.enabled) &&
        Objects.equals(this.graceful, changeContainerServiceStateCommand.graceful);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipAddress, port, enabled, graceful);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeContainerServiceStateCommand {\n");
    
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    graceful: ").append(toIndentedString(graceful)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

