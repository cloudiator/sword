/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package client.api;

import client.*;
import client.model.instances.*;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InstancesApi {
    private ApiClient apiClient;

    public InstancesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public InstancesApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call instancesDeleteValidateBeforeCall(int region, int vmId) throws ApiException {

        String localVarPath = "/workspaces/ "+ apiClient.getCurrentWorkspace() + "/regions/" + region + "/virtual_machines/" + vmId;

        com.squareup.okhttp.Call call = instancesCall(null, localVarPath, "DELETE");
        return call;
    }

    /**
     * Delete instance
     *
     * @return Ticket
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public EmptyResponse instancesDelete(int region, int vmId) throws ApiException {
        ApiResponse<EmptyResponse> resp = instancesDeleteWithHttpInfo(region, vmId);
        return resp.getData();
    }

    /**
     * Delete instance
     *
     * @return ApiResponse&lt;Ticket&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<EmptyResponse> instancesDeleteWithHttpInfo(int region, int vmId) throws ApiException {
        com.squareup.okhttp.Call call = instancesDeleteValidateBeforeCall(region, vmId);
        Type localVarReturnType = new TypeToken<EmptyResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call instancesGetValidateBeforeCall(int region) throws ApiException {
        String localVarPath = "/workspaces/ "+ apiClient.getCurrentWorkspace() + "/regions/" + region + "/virtual_machines/";

        com.squareup.okhttp.Call call = instancesCall(null, localVarPath, "GET");
        return call;

    }

    /**
     * Returns instance list
     * Acceptable order values are: Type, Status, CreationDate, Name.
     *
     * @return ApiCollectionInstance
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiCollectionInstance instancesGet(int region) throws ApiException {
        ApiResponse<ApiCollectionInstance> resp = instancesGetWithHttpInfo(region);
        return resp.getData();
    }

    /**
     * Returns instance list
     * Acceptable order values are: Type, Status, CreationDate, Name.
     * @return ApiResponse&lt;ApiCollectionInstance&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ApiCollectionInstance> instancesGetWithHttpInfo(int region) throws ApiException {
        com.squareup.okhttp.Call call = instancesGetValidateBeforeCall(region);
        Type localVarReturnType = new TypeToken<ApiCollectionInstance>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }


    private com.squareup.okhttp.Call instanceDetailsGetValidateBeforeCall(int region, int vmId) throws ApiException {
        String localVarPath = "/workspaces/ "+ apiClient.getCurrentWorkspace() + "/regions/" + region + "/virtual_machines/" + vmId;

        com.squareup.okhttp.Call call = instancesCall(null, localVarPath, "GET");
        return call;

    }

    /**
     * Returns instance list
     * Acceptable order values are: Type, Status, CreationDate, Name.
     *
     * @return ApiCollectionInstance
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InstanceDetails instanceDetailsGet(int region, int vmId) throws ApiException {
        ApiResponse<InstanceDetails> resp = instanceDetailsGetWithHttpInfo(region, vmId);
        return resp.getData();
    }

    /**
     * Returns instance list
     * Acceptable order values are: Type, Status, CreationDate, Name.
     * @return ApiResponse&lt;ApiCollectionInstance&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InstanceDetails> instanceDetailsGetWithHttpInfo(int region, int vmId) throws ApiException {
        com.squareup.okhttp.Call call = instanceDetailsGetValidateBeforeCall(region, vmId);
        Type localVarReturnType = new TypeToken<InstanceDetails>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Build call for instancesPost
     *
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call instancesCall(Object body, String localVarPath, String method) throws ApiException {
        Object localVarPostBody = body;

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
                "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[]{"oauth2"};
        return apiClient.buildCall(localVarPath, method, localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call instancesPostValidateBeforeCall(CreateInstanceCommand command, int region, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        // verify the required parameter 'command' is set
        if (command == null) {
            throw new ApiException("Missing the required parameter 'command' when calling instancesPost(Async)");
        }

        String localVarPath = "/workspaces/ "+ apiClient.getCurrentWorkspace() + "/regions/" + region + "/virtual_machines/";

        com.squareup.okhttp.Call call = instancesCall(command, localVarPath, "POST");
        return call;

    }

    /**
     * Creates instance
     *
     * @param command Create instance command (required)
     * @return Ticket
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InstanceId instancesPost(CreateInstanceCommand command, int region) throws ApiException {
        ApiResponse<InstanceId> resp = instancesPostWithHttpInfo(command, region);
        return resp.getData();
    }

    /**
     * Creates instance
     *
     * @param command Create instance command (required)
     * @return ApiResponse&lt;Ticket&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InstanceId> instancesPostWithHttpInfo(CreateInstanceCommand command, int region) throws ApiException {
        com.squareup.okhttp.Call call = instancesPostValidateBeforeCall(command, region, null, null);
        Type localVarReturnType = new TypeToken<InstanceId>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

}
