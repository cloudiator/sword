/*
 * Oktawave API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package client.model.instances;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Create instance command
 */
@ApiModel(description = "Create instance command")
public class CreateInstanceCommand {
  @SerializedName("name")
  private String name = null;

  @SerializedName("operating_system_version_id")
  private Integer operatingSystemVersionId = null;

  @SerializedName("cluster_id")
  private Integer clusterId = null;

  @SerializedName("cpu_cores")
  private Integer cpuCores = null;

  @SerializedName("ram")
  private Long ram = null;

  @SerializedName("primary_disk")
  private Disk primaryDisk = null;

  @SerializedName("additional_disks")
  private List<Disk> additionalDisks = null;

  @SerializedName("authorisation")
  private Authorisation authorisation = null;

  @SerializedName("private_network_id")
  private Integer privateNetworkId = null;

  @SerializedName("add_dedicated_public_ip")
  private Boolean addDedicatedPublicIp = true;

  public CreateInstanceCommand name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Authorization method (Password)
   * @return authorizationMethodId
  **/
  @ApiModelProperty(value = "name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateInstanceCommand operatingSystemVersionId(Integer operatingSystemVersionId) {
    this.operatingSystemVersionId = operatingSystemVersionId;
    return this;
  }

   /**
   * Class of disk
   * @return diskClass
  **/
  @ApiModelProperty(value = "operatingSystemVersionId")
  public Integer getOperatingSystemVersionId() {
    return operatingSystemVersionId;
  }

  public void setOperatingSystemVersionId(Integer operatingSystemVersionId) {
    this.operatingSystemVersionId = operatingSystemVersionId;
  }

  public CreateInstanceCommand clusterId(Integer clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Size of disk in gigabytes
   * minimum: 5
   * maximum: 300
   * @return diskSize
  **/
  @ApiModelProperty(value = "clusterId")
  public Integer getClusterId() {
    return clusterId;
  }

  public void setClusterId(Integer clusterId) {
    this.clusterId = clusterId;
  }

  public CreateInstanceCommand cpuCores(Integer cpuCores) {
    this.cpuCores = cpuCores;
    return this;
  }

   /**
   * Name of an instance
   * @return instanceName
  **/
  @ApiModelProperty(required = true, value = "cpuCores")
  public Integer getCpuCores() {
    return cpuCores;
  }

  public void setCpuCores(Integer cpuCores) {
    this.cpuCores = cpuCores;
  }

  public CreateInstanceCommand ram(Long ram) {
    this.ram = ram;
    return this;
  }

   /**
   * Count of instances
   * minimum: 1
   * maximum: 5
   * @return instancesCount
  **/
  @ApiModelProperty(value = "Count of instances")
  public Long getRam() {
    return ram;
  }

  public void setRam(Long ram) {
    this.ram = ram;
  }

  public CreateInstanceCommand primaryDisk(Disk primaryDisk) {
    this.primaryDisk = primaryDisk;
    return this;
  }

   /**
   * Id of ip address
   * @return ipAddressId
  **/
  @ApiModelProperty(value = "primaryDisk")
  public Disk getPrimaryDisk() {
    return primaryDisk;
  }

  public void setPrimaryDisk(Disk primaryDisk) {
    this.primaryDisk = primaryDisk;
  }

  public CreateInstanceCommand additionalDisks(List<Disk> additionalDisks) {
    this.additionalDisks = additionalDisks;
    return this;
  }

  public CreateInstanceCommand additionalDisks(Disk additionalDisks) {
    if (this.additionalDisks == null) {
      this.additionalDisks = new ArrayList<Disk>();
    }
    this.additionalDisks.add(additionalDisks);
    return this;
  }

   /**
   * Id of ssh keys to be attached to the instance
   * @return sshKeysIds
  **/
  @ApiModelProperty(value = "Id of ssh keys to be attached to the instance")
  public List<Disk> getAdditionalDisks() {
    return additionalDisks;
  }

  public void setAdditionalDisks(List<Disk> additionalDisks) {
    this.additionalDisks = additionalDisks;
  }

  public void setHddPrimaryDisk(int gbSize) {
    Disk disk = new Disk();
    disk.setType("hdd");
    disk.setSize(gbSize);
    this.setPrimaryDisk(disk);
  }

  public CreateInstanceCommand authorisation(Authorisation authorisation) {
    this.authorisation = authorisation;
    return this;
  }

   /**
   * Id of target subregion
   * @return subregionId
  **/
  @ApiModelProperty(value = "authorisation")
  public Authorisation getAuthorisation() {
    return authorisation;
  }

  public void setAuthorisation(Authorisation authorisation) {
    this.authorisation = authorisation;
  }

  public CreateInstanceCommand privateNetworkId(Integer privateNetworkId) {
    this.privateNetworkId = privateNetworkId;
    return this;
  }

   /**
   * Template id
   * @return templateId
  **/
  @ApiModelProperty(required = true, value = "privateNetworkId")
  public Integer getPrivateNetworkId() {
    return privateNetworkId;
  }

  public void setPrivateNetworkId(Integer privateNetworkId) {
    this.privateNetworkId = privateNetworkId;
  }

  public CreateInstanceCommand addDedicatedPublicIp(Boolean addDedicatedPublicIp) {
    this.addDedicatedPublicIp = addDedicatedPublicIp;
    return this;
  }

   /**
   * Freemium
   * @return freemium
  **/
  @ApiModelProperty(value = "addDedicatedPublicIp")
  public Boolean isAddDedicatedPublicIp() {
    return addDedicatedPublicIp;
  }

  public void setAddDedicatedPublicIp(Boolean addDedicatedPublicIp) {
    this.addDedicatedPublicIp = addDedicatedPublicIp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateInstanceCommand createInstanceCommand = (CreateInstanceCommand) o;
    return Objects.equals(this.name, createInstanceCommand.name) &&
        Objects.equals(this.operatingSystemVersionId, createInstanceCommand.operatingSystemVersionId) &&
        Objects.equals(this.clusterId, createInstanceCommand.clusterId) &&
        Objects.equals(this.cpuCores, createInstanceCommand.cpuCores) &&
        Objects.equals(this.ram, createInstanceCommand.ram) &&
        Objects.equals(this.primaryDisk, createInstanceCommand.primaryDisk) &&
        Objects.equals(this.additionalDisks, createInstanceCommand.additionalDisks) &&
        Objects.equals(this.authorisation, createInstanceCommand.authorisation) &&
        Objects.equals(this.privateNetworkId, createInstanceCommand.privateNetworkId) &&
        Objects.equals(this.addDedicatedPublicIp, createInstanceCommand.addDedicatedPublicIp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, operatingSystemVersionId, clusterId, cpuCores, ram, primaryDisk, additionalDisks, authorisation, privateNetworkId, addDedicatedPublicIp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateInstanceCommand {\n");

      sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operatingSystemVersionId: ").append(toIndentedString(operatingSystemVersionId)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    cpuCores: ").append(toIndentedString(cpuCores)).append("\n");
    sb.append("    ram: ").append(toIndentedString(ram)).append("\n");
    sb.append("    primaryDisk: ").append(toIndentedString(primaryDisk)).append("\n");
    sb.append("    additionalDisk: ").append(toIndentedString(additionalDisks)).append("\n");
    sb.append("    authorisation: ").append(toIndentedString(authorisation)).append("\n");
    sb.append("    privateNetworkId: ").append(toIndentedString(privateNetworkId)).append("\n");
    sb.append("    addDedicatedPublicIp: ").append(toIndentedString(addDedicatedPublicIp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

